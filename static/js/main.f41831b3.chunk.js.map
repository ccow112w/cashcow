{"version":3,"sources":["apis/SDK.js","apis/IconexConnect.js","constants.js","components/AdPage.js","App.js","serviceWorker.js","index.js","assets/images/ad1.png","assets/images/ad2.png","assets/images/ad3.png","assets/images/ad4.png"],"names":["provider","HttpProvider","window","PROVIDER_URL","iconService","IconService","CallBuilder","IconBuilder","CallTransactionBuilder","SDK","callBuild","_ref","arguments","length","undefined","from","methodName","to","_ref$params","params","method","build","sendTxBuild","_ref2","_ref2$params","_ref2$networkId","networkId","NID","_ref2$stepLimit","stepLimit","_ref2$value","value","jsonrpc","nid","timestamp","concat","Date","getTime","toString","version","id","IconexConnect","getAddress","Promise","resolve","addEventListener","eventHandler","event","_event$detail","detail","type","payload","removeEventListener","dispatchEvent","CustomEvent","sendTransaction","_event$detail2","result","constants","MODE","LOG_OUT","LOG_IN","Meta","AdPage","props","_useState","useState","_useState2","Object","slicedToArray","_useState3","myAddress","_useState5","_useState6","myCnt","setMyCnt","getCntClick","_getCntClick","apply","this","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","call","CONTRACT_ADDRESS","execute","sent","Number","stop","click","_click","_callee2","txObj","tx","_context2","console","log","useEffect","react_default","createElement","row","gutter","col","span","card","title","toFixed","className","hoverable","onClick","cover","style","backgroundImage","ad1","description","ad2","ad3","ad4","Content","App","CONST","mode","setMode","_useState4","setMyAddress","_getAddress","message","success","layout","justify","align","components_AdPage","Fragment","color","fontSize","marginBottom","fontFamily","es_button","size","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f41831b3.chunk.js","sourcesContent":["import IconService, {\n  HttpProvider,\n  IconBuilder,\n} from 'icon-sdk-js'\nimport config from '../config'\n\nconst provider = new HttpProvider(window.PROVIDER_URL)\nconst iconService = new IconService(provider)\n\nconst {\n  CallBuilder,\n  CallTransactionBuilder,\n} = IconBuilder;\n\nconst callBuild = ({\n  from,\n  methodName,\n  to,\n  params = {},\n} = {}) => {\n  const callBuilder = new CallBuilder();\n  const obj = callBuilder\n    .from(from)\n    .to(to)\n    .method(methodName)\n    .params(params)\n    .build();\n  return obj;\n};\n\nconst sendTxBuild = ({\n  from,\n  to,\n  methodName,\n  params = {},\n  networkId = window.NID,\n  stepLimit = '0x493e0',\n  value = '0x0',\n} = {}) => {\n  const callTransactionBuilder = new CallTransactionBuilder();\n  const obj = callTransactionBuilder\n    .nid(networkId)\n    .from(from)\n    .to(to)\n    .stepLimit(stepLimit)\n    .value(value)\n    .timestamp(`0x${((new Date()).getTime() * 1000).toString(16)}`)\n    .method(methodName)\n    .params(params)\n    .version('0x3')\n    .build();\n\n  return {\n    jsonrpc: '2.0',\n    method: 'icx_sendTransaction',\n    params: obj,\n    id: 1,\n  };\n};\n\nexport default {\n  iconService,\n  callBuild,\n  sendTxBuild,\n}","const getAddress = () => new Promise((resolve) => {\n    const eventHandler = (event) => {\n      const { type, payload } = event.detail;\n      if (type === 'RESPONSE_ADDRESS') {\n        resolve(payload);\n      }\n      window.removeEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    };\n    window.addEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    window.dispatchEvent(new CustomEvent('ICONEX_RELAY_REQUEST', {\n      detail: {\n        type: 'REQUEST_ADDRESS',\n      },\n    }));\n  });\n  \n  \n  const sendTransaction = params => new Promise((resolve) => {\n    const eventHandler = (event) => {\n      const { type, payload } = event.detail;\n      if (type === 'RESPONSE_JSON-RPC') {\n        resolve(payload.result);\n      }\n      window.removeEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    };\n    window.addEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    window.dispatchEvent(new CustomEvent('ICONEX_RELAY_REQUEST', {\n      detail: {\n        type: 'REQUEST_JSON-RPC',\n        payload: params,\n      },\n    }));\n  });\n  \n  export default {\n    getAddress,\n    sendTransaction,\n  };","export default {\n    'MODE': {\n        'LOG_OUT': 'LOG_OUT',\n        'LOG_IN': 'LOG_IN'\n    }\n}","import React , {useState, useEffect} from 'react'\nimport { Row, Col, Card } from 'antd';\n\n\nimport SDK from 'apis/SDK';\nimport IconexConnect from 'apis/IconexConnect';\n\nimport ad1 from 'assets/images/ad1.png'\nimport ad2 from 'assets/images/ad2.png'\nimport ad3 from 'assets/images/ad3.png'\nimport ad4 from 'assets/images/ad4.png'\n\nconst { Meta } = Card;\n\nfunction AdPage(props) {\n  const [clickCnt, setClickCnt] = useState(0)\n  const [myAddress] = useState(props.myAddress)\n  const [myCnt, setMyCnt] = useState(0)\n  useEffect(() => {\n      getCntClick()\n  },[]);\n  useEffect(()=>{\n    console.log(myAddress)\n    getCntClick()\n  })\n\n  async function getCntClick() {\n    const myCnt = await SDK.iconService.call(\n      SDK.callBuild({\n        from: myAddress,\n        methodName: 'get_cnt_click',\n        params: {},\n        to: window.CONTRACT_ADDRESS,\n      })\n    ).execute()\n\n    setMyCnt(Number(myCnt))\n  }\n\n  async function click() {\n    const { sendTxBuild } = SDK\n    const txObj = sendTxBuild({\n      from: myAddress,\n      to: window.CONTRACT_ADDRESS,\n      methodName: 'click'\n    })\n    const tx = await IconexConnect.sendTransaction(txObj)\n    console.log(tx)\n    if (tx){\n      getCntClick()\n    }\n  }\n  return (\n    <div>\n      <Row gutter={50}>\n        <Col span={12}>\n          <Card title=\"click 누적횟수\">\n            {myCnt}\n          </Card>\n          \n        </Col>\n        <Col span={12}>\n          <Card title=\"이번달 reward (단위:ICX)\">\n          {(myCnt*0.1).toFixed(1)}\n          </Card>\n        </Col>\n      </Row>\n      <Row gutter={30} className=\"ad-wrap\">\n        <Col span={6}>\n          <Card\n            hoverable\n            onClick={()=>click()}\n            cover={\n              <div className=\"ad-image\" style={{backgroundImage: `url(${ad1})`}} />\n            }>\n            <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card\n            hoverable\n            onClick={()=>click()}\n            cover={\n              <div className=\"ad-image\" style={{backgroundImage: `url(${ad2})`}} />\n            }>\n            <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card\n            hoverable\n            onClick={()=>click()}\n            cover={\n              <div className=\"ad-image\" style={{backgroundImage: `url(${ad3})`}} />\n            }>\n            <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card\n            hoverable\n            onClick={()=>click()}\n            cover={\n              <div className=\"ad-image\" style={{backgroundImage: `url(${ad4})`}} />\n            }>\n            <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default AdPage;","import React, {useState} from 'react';\nimport { Button, message, Layout, Row, Col } from 'antd'\nimport SDK from 'apis/SDK';\nimport IconexConnect from 'apis/IconexConnect';\nimport CONST from './constants';\nimport { AdPage } from 'components'\nimport './App.css';\n\n//define\nconst { Content } = Layout;\n\nfunction App() {\n  const [ mode, setMode ] = useState( CONST.MODE['LOG_OUT'])\n  const [ myAddress, setMyAddress ] = useState('')\n\n  async function getAddress  ()  { // 로그인\n    const { iconService, callBuild } = SDK\n    const myAddress = await IconexConnect.getAddress()\n    setMyAddress(myAddress)\n    setMode(CONST.MODE['LOG_IN'])\n    message.success(`Hello, ${myAddress}.`)\n  }\n  return (\n    <Layout>\n      <Content>\n        <Row type=\"flex\" justify=\"center\" align=\"middle\" className={`page-wrap ${mode === CONST.MODE['LOG_OUT'] ? 'cow-bg' : 'cow-bg'} `}>\n          <Col>\n          {mode === CONST.MODE['LOG_IN'] ? <AdPage myAddress={myAddress}/> :  \n            <>\n              <h1 style={{color: '#ffffff',fontSize:40, marginBottom:2, fontFamily: 'cursive'}}>Cash Cow</h1>\n              <h2 style={{color: '#ffffff', fontSize:20, fontFamily: 'cursive'}}> Click & Get Coin</h2>\n              <Button size=\"large\" onClick={getAddress} style={{fontFamily: 'initial'}}>ICONex 연동하기</Button>\n            </>\n          }\n          </Col>\n        </Row>\n    </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ad1.754e2fbc.png\";","module.exports = __webpack_public_path__ + \"static/media/ad2.f336928b.png\";","module.exports = __webpack_public_path__ + \"static/media/ad3.fac9b7bd.png\";","module.exports = __webpack_public_path__ + \"static/media/ad4.5e6d4ff0.png\";"],"sourceRoot":""}